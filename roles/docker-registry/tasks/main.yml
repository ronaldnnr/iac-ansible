---
  - name: Create base directory for docker-registry {{ docker_registry_data_dir }}
    file:
      path: "{{ docker_registry_data_dir }}"
      state: directory
      mode: 0750
    tags:
      - docker-registry

  - name: Check if registry is already running
    shell: "{%raw%}docker inspect --format '{{.State.Running}}' registry &>/dev/null{%endraw%}"
    ignore_errors: yes
    register: registry_running
    tags:
      - docker-registry

  - name: Run docker-registry
    command: "{{ docker_registry_cmd }}"
    when: registry_running.rc != 0
    tags:
      - docker-registry

  - name: Test docker-registry
    uri:
      url: http://localhost:5000/v2/
      status_code: 200
      return_content: yes
    register: test_docker_registry
    until: test_docker_registry.content == '{}'
    retries: 5
    delay: 2
    ignore_errors: yes
    tags:
      - docker-registry

  - name: Install passlib for htpasswd module
    yum:
      name: python-passlib
      state: present
    when: docker_registry_security
    tags:
      - docker-registry

  - name: Create nginx directory for secure docker-registry
    file:
      path: "{{ item }}"
      state: directory
    with_items:
      - /etc/nginx
      - /etc/nginx/conf.d
      - /etc/nginx/certs
      - /var/log/nginx
    when: docker_registry_security
    tags:
      - docker-registry

  - name: Install nginx files for secure docker-registry
    template:
      src: nginx.conf.j2
      dest: /etc/nginx/conf.d/default.conf
    when: docker_registry_security
    tags:
      - docker-registry

  - name: Create user/pass for docker-registry
    htpasswd:
      path: /etc/nginx/conf.d/registry.htpasswd
      name: "{{ item.username }}"
      password: "{{ item.password }}"
      owner: root
      group: root
      mode: 0644
    with_items:
      - "{{ docker_registry_users }}"
    when: docker_registry_security
    tags:
      - docker-registry

  - name: Check if www-registry is already running
    shell: "{%raw%}docker inspect --format '{{.State.Running}}' www-registry &>/dev/null{%endraw%}"
    ignore_errors: yes
    register: www_registry_running
    tags:
      - docker-registry

  - name: Run docker nginx image
    command: "{{ docker_registry_nginx_cmd }}"
    when:
      - docker_registry_security
      - registry_running.rc != 0
    tags:
      - docker-registry
